141. Linked List Cycle

Input: head = [3,2,0,-4], pos = 1
Output: true
Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).

class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head==NULL || head->next==NULL)
            return false;
        ListNode *temp = head;
        unordered_map<ListNode*,bool>map;
        while(temp!=NULL)
        {
            if(map[temp->next])
                return true;
            else
                map[temp]=true;
            temp=temp->next;
        }
        return false;
    }
};
